<h1>SF ApexDoc Project</h1>
<p>This is a revamped version of Aslam Bari's ApexDoc. The Eclipse plugin capabilities&nbsp;
have been removed. Lots of quirks and defects have been fixed as well, though&nbsp;
several very sticky issues remain.</p>

<p>Most of the options have stayed the same, but there are a few differences.&nbsp;
  <ul>
    <li>The JRE has been upgraded to 1.6</li>
    <li>Scope values are now comma-separated, rather than semi-colon separated (i.e. "global,public")</li>
    <li>A file extension parameter (-x) has been added to allow you to generate documentation for files other than CLS (i.e. TRIGGER, JAVA)</li>
  </ul>
</p>
    
<p>Documentation can be generated by running the following on the command line:</p>
<blockquote style="font-family:Courier;font-size:.8em;">
  java -jar SfApexDoc.jar -s &lt;source_folder&gt; [-t &lt;target_folder&gt;] [-h &lt;homefile&gt;] [-a &lt;authorfile&gt;] [-p &lt;scope&gt;] [-x &lt;file extension&gt;]
</blockquote>

<p>Known issues and challenges:<br/>
  <ul>
    <li>handle multiple lines for any comment tag, not just description</li>
    <li>handle more comment tags for properties and classes</li>
    <li>handle single line comments as documentation</li>
    <li>handle descriptions without the @description tag</li>
    <li>handle method signatures, properties, and class definitions spanning multiple lines</li>
    <li>handle nested classes</li>
    <li>implement @see tag (multiple, with links)</li>
    <li>handle multiple lines between the comments and the class/method/property</li>
    <li>link to types mentioned in comments, signatures, etc.</li>
    <li>provide more info for final, static, virtual, etc. method, or property.</li>
  </ul> 
</p>